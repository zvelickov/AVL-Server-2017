<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GlobSaldo.GISDB.Data.SqlClient</name>
    </assembly>
    <members>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Stations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.Delete(GlobSaldo.GISDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_miPrinx">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Stations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.GISDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Stations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.GetAll(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Stations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.GetPaged(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Stations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.GetByMiPrinx(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__STATIONS__B335D4E52CF2ADDF index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="_miPrinx"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.GISDB.Entities.Stations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.BulkInsert(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.TList{GlobSaldo.GISDB.Entities.Stations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.GISDB.Entities.Stations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.Insert(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.Stations)">
            <summary>
            	Inserts a GlobSaldo.GISDB.Entities.Stations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.GISDB.Entities.Stations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.GISDB.Entities.Stations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.Update(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.Stations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.GISDB.Entities.Stations object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.GISDB.Entities.Stations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Regions"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Regions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.Delete(GlobSaldo.GISDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_miPrinx">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Regions objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.GISDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Regions objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.GetAll(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Regions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.GetPaged(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Regions objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.GetByMiPrinx(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__REGIONS__B335D4E53B40CD36 index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="_miPrinx"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.GISDB.Entities.Regions"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.BulkInsert(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.TList{GlobSaldo.GISDB.Entities.Regions})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.GISDB.Entities.Regions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.Insert(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.Regions)">
            <summary>
            	Inserts a GlobSaldo.GISDB.Entities.Regions object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.GISDB.Entities.Regions object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.GISDB.Entities.Regions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.Update(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.Regions)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.GISDB.Entities.Regions object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.GISDB.Entities.Regions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlRegionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the Vstations objects.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.GetAll(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vstations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.Get(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vstations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.GISDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Vstations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.uGetStations(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_VStations_uGetStations' stored procedure. 
            </summary>
            <param name="x"> A <c>System.Decimal?</c> instance.</param>
            <param name="y"> A <c>System.Decimal?</c> instance.</param>
            <param name="idCompany"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.GISDB.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the Vregions objects.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.GetAll(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vregions objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.Get(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vregions objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.GISDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Vregions objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.uGetRegions(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_VRegions_uGetRegions' stored procedure. 
            </summary>
            <param name="x"> A <c>System.Decimal?</c> instance.</param>
            <param name="y"> A <c>System.Decimal?</c> instance.</param>
            <param name="idCompany"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.GISDB.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Geolocations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.Delete(GlobSaldo.GISDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_miPrinx">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Geolocations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.GISDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Geolocations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.GetAll(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Geolocations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.GetPaged(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.GISDB.Entities.Geolocations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.GetByMiPrinx(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__GEOLOCAT__B335D4E56EF57B66 index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="_miPrinx"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.GISDB.Entities.Geolocations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.BulkInsert(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.TList{GlobSaldo.GISDB.Entities.Geolocations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.GISDB.Entities.Geolocations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.Insert(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.Geolocations)">
            <summary>
            	Inserts a GlobSaldo.GISDB.Entities.Geolocations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.GISDB.Entities.Geolocations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.GISDB.Entities.Geolocations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.Update(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Entities.Geolocations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.GISDB.Entities.Geolocations object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.GISDB.Entities.Geolocations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the VgeoFence objects.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.GetAll(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of VgeoFence objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.Get(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of VgeoFence objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.GISDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of VgeoFence objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.uGetGeoFence(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_VGeoFence_uGetGeoFence' stored procedure. 
            </summary>
            <param name="x"> A <c>System.Decimal?</c> instance.</param>
            <param name="y"> A <c>System.Decimal?</c> instance.</param>
            <param name="idCompany"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.GISDB.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Stations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlStationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Vstations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVstationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider">
            <summary>
            Summary description for Procedures.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.Serialize(System.String)">
            <summary>
            Serializes the specified filename.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.Deserialize">
            <summary>
            Deserializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.GetProcedureBodyFromEmbeddedResource(System.String)">
            <summary>
            Get the query text from the embedded xml file.
            </summary>
            <param name="name">The name of the query.</param>
            <returns>the text of the query</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Boolean)">
            <summary>
            Get the command wrapper, either from the stored procedures or from the embedded queries.
            </summary>
            <param name="database">The database instance.</param>
            <param name="commandName">the name of the sp.</param>
            <param name="useStoredProcedure">Indicates if we want stored procedure.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Type,GlobSaldo.GISDB.Data.SqlFilterParameterCollection,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the command wrapper for a dynamically generated query and
            optionally includes server-side paging.
            </summary>
            <param name="database"></param>
            <param name="commandName"></param>
            <param name="columnEnum"></param>
            <param name="parameters"></param>
            <param name="orderBy"></param>
            <param name="start"></param>
            <param name="pageLength"></param>
            <returns></returns>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.Current">
            <summary>
            Gets the current <see cref="T:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider"/> singleton instance.
            </summary>
            <value><see cref="T:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider"/></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.Procedures">
            <summary>
            Gets or sets the procedures.
            </summary>
            <value>An <see cref="T:System.Collections.ArrayList"/> of <see cref="T:GlobSaldo.GISDB.Data.SqlClient.Procedure"/> objects.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:GlobSaldo.GISDB.Data.SqlClient.Procedure"/> instance with the specified name.
            </summary>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.StoredProcedureProvider.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:GlobSaldo.GISDB.Data.SqlClient.Procedure"/> instance at the specified index.
            </summary>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.Procedure">
            <summary>
            Represents a sql query.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.Procedure.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.Procedure"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.Procedure.Parameter(System.String)">
            <summary>
            Get the parameter from the specified name of the param.
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns></returns>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Procedure.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Procedure.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Procedure.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Procedure.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Procedure.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value></value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.Parameter">
            <summary>
            Respresents a query parameter.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.Parameter.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.Parameter"/> instance.
            </summary>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Parameter.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Parameter.SqlType">
            <summary>
            Gets or sets the SqlType.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Parameter.Direction">
            <summary>
            Gets or sets the Direction.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Parameter.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Parameter.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.Parameter.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value></value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Geolocations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlGeolocationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider">
            <summary>
            This class is the Sql implementation of the NetTiersProvider.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider"/> class.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.CreateTransaction">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(GlobSaldo.GISDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(GlobSaldo.GISDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(GlobSaldo.GISDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(GlobSaldo.GISDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(GlobSaldo.GISDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(GlobSaldo.GISDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(GlobSaldo.GISDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(GlobSaldo.GISDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.UseStoredProcedure">
            <summary>
            Gets a value indicating whether to use stored procedure or not.
            </summary>
            <value>
            	<c>true</c> if this repository use stored procedures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.IsTransactionSupported">
            <summary>
             Indicates if the current <see cref="T:GlobSaldo.GISDB.Data.Bases.NetTiersProvider"/> implementation supports Transacton.
            </summary>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.GeolocationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.GISDB.Entities.Geolocations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlGeolocationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlGeolocationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.RegionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.GISDB.Entities.Regions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlRegionsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlRegionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.StationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.GISDB.Entities.Stations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlStationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlStationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.VgeoFenceProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.GISDB.Entities.VgeoFence"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVgeoFenceProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVgeoFenceProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.VgeoLocationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.GISDB.Entities.VgeoLocations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVgeoLocationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVgeoLocationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.VregionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.GISDB.Entities.Vregions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVregionsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVregionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.VstationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.GISDB.Entities.Vstations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVstationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.GISDB.Data.SqlClient.SqlNetTiersProvider.SqlVstationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.Vregions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVregionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.VgeoFence"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoFenceProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the VgeoLocations objects.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.GetAll(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of VgeoLocations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.Get(GlobSaldo.GISDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of VgeoLocations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.Find(GlobSaldo.GISDB.Data.TransactionManager,GlobSaldo.GISDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.GISDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of VgeoLocations objects.</returns>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.uGetGeoLocations(GlobSaldo.GISDB.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This method wraps the 'usr_VGeoLocations_uGetGeoLocations' stored procedure. 
            </summary>
            <param name="x"> A <c>System.Decimal?</c> instance.</param>
            <param name="y"> A <c>System.Decimal?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.GISDB.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.GISDB.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.GISDB.Entities.VgeoLocations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.GISDB.Data.SqlClient.SqlVgeoLocationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
    </members>
</doc>
