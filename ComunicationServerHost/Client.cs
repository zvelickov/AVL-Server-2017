//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Taxi.Communication.Server.Utils
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResponse", Namespace="http://schemas.datacontract.org/2004/07/Taxi.Communication.Server.Utils")]
    public partial class WebResponse : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string carNumberField;
        
        private string messageField;
        
        private int statusField;
        
        private System.TimeSpan timeToClientField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string carNumber
        {
            get
            {
                return this.carNumberField;
            }
            set
            {
                this.carNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan timeToClient
        {
            get
            {
                return this.timeToClientField;
            }
            set
            {
                this.timeToClientField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWebConnectService")]
public interface IWebConnectService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebConnectService/initiateUpdateForRoutes", ReplyAction="http://tempuri.org/IWebConnectService/initiateUpdateForRoutesResponse")]
    long initiateUpdateForRoutes(long ID_Vehicle);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebConnectService/searchAndReserveVehicle", ReplyAction="http://tempuri.org/IWebConnectService/searchAndReserveVehicleResponse")]
    Taxi.Communication.Server.Utils.WebResponse searchAndReserveVehicle(double latitude, double longitude, string address, string addressNum, string note);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebConnectService/checkOrderStatus", ReplyAction="http://tempuri.org/IWebConnectService/checkOrderStatusResponse")]
    string checkOrderStatus(string orderId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebConnectService/acceptOrder", ReplyAction="http://tempuri.org/IWebConnectService/acceptOrderResponse")]
    string acceptOrder(string orderId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebConnectService/rejectOrder", ReplyAction="http://tempuri.org/IWebConnectService/rejectOrderResponse")]
    string rejectOrder(string orderId);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IWebConnectServiceChannel : IWebConnectService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class WebConnectServiceClient : System.ServiceModel.ClientBase<IWebConnectService>, IWebConnectService
{
    
    public WebConnectServiceClient()
    {
    }
    
    public WebConnectServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WebConnectServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WebConnectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WebConnectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public long initiateUpdateForRoutes(long ID_Vehicle)
    {
        return base.Channel.initiateUpdateForRoutes(ID_Vehicle);
    }
    
    public Taxi.Communication.Server.Utils.WebResponse searchAndReserveVehicle(double latitude, double longitude, string address, string addressNum, string note)
    {
        return base.Channel.searchAndReserveVehicle(latitude, longitude, address, addressNum, note);
    }
    
    public string checkOrderStatus(string orderId)
    {
        return base.Channel.checkOrderStatus(orderId);
    }
    
    public string acceptOrder(string orderId)
    {
        return base.Channel.acceptOrder(orderId);
    }
    
    public string rejectOrder(string orderId)
    {
        return base.Channel.rejectOrder(orderId);
    }
}
