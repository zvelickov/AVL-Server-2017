<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GlobSaldo.AVL.Data.SqlClient</name>
    </assembly>
    <members>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileMonitoringSentMessagesToVehicles">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MobileMonitoringSentMessagesToVehicles_Vehicle key.
            	FK_MobileMonitoringSentMessagesToVehicles_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.GetByIdMobileMonitoringSentMessagesToVehicles(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileMonitoringSentMessagesToVehicles index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileMonitoringSentMessagesToVehicles"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileMonitoringSentMessagesToVehiclesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Locations"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Locations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idLocation">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Locations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Locations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Locations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Locations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetByIdVehicleLocalTime(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXLocationsID_VehicleLocalTime index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="_localTime"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetByIsProcessed(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Boolean},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXLocationsIsProcessed index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_isProcessed"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetByIdLocation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Locations index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idLocation"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Locations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Locations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Locations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Locations)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Locations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Locations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Locations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Locations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Locations object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Locations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.SpeedLimitCrossPaged(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'usr_Locations_SpeedLimitCrossPaged' stored procedure. 
            </summary>	
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="speed"> A <c>System.Decimal?</c> instance.</param>
            <param name="pageindex"> A <c>System.Int32?</c> instance.</param>
            <param name="pagesize"> A <c>System.Int32?</c> instance.</param>
            <param name="maxPages"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetPreviousLocationByID_Location(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Locations_GetPreviousLocationByID_Location' stored procedure. 
            </summary>	
            <param name="idLocation"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetLocationByIDVehicleForIntervalPaged_old(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'usr_Locations_GetLocationByIDVehicleForIntervalPaged_old' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageindex"> A <c>System.Int32?</c> instance.</param>
            <param name="pagesize"> A <c>System.Int32?</c> instance.</param>
            <param name="maxPages"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetLocationByIDVehicleForIntervalPaged(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'usr_Locations_GetLocationByIDVehicleForIntervalPaged' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageindex"> A <c>System.Int32?</c> instance.</param>
            <param name="pagesize"> A <c>System.Int32?</c> instance.</param>
            <param name="maxPages"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetLastLocationByIDVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Locations_GetLastLocationByIDVehicle' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.AllLocationsForID_VehiclePaged(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'usr_Locations_AllLocationsForID_VehiclePaged' stored procedure. 
            </summary>	
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="pageindex"> A <c>System.Int32?</c> instance.</param>
            <param name="pagesize"> A <c>System.Int32?</c> instance.</param>
            <param name="maxPages"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetLocationByIDVehicleForInterval(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'usr_Locations_GetLocationByIDVehicleForInterval' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.GetUnProcessedLocations(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'usr_Locations_GetUnProcessedLocations' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ObjectDescription"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idObjectDescription">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ObjectDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ObjectDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ObjectDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ObjectDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.GetByIdObject(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectDescription_gisObjects key.
            	FK_ObjectDescription_gisObjects Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idObject"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ObjectDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectDescription_Users key.
            	FK_ObjectDescription_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ObjectDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.GetByIdObjectDescription(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IObjectDescription_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idObjectDescription"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ObjectDescription"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ObjectDescription})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ObjectDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ObjectDescription)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ObjectDescription object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ObjectDescription object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ObjectDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ObjectDescription)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ObjectDescription object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ObjectDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CompletedReservations"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CompletedReservations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idCompletedReservation">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompletedReservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompletedReservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompletedReservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompletedReservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CompletedReservations_PhoneCalls key.
            	FK_CompletedReservations_PhoneCalls Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompletedReservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.GetByIdReservation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CompletedReservations_Reservations key.
            	FK_CompletedReservations_Reservations Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReservation"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompletedReservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CompletedReservations_Users key.
            	FK_CompletedReservations_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompletedReservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.GetByIdCompletedReservation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CompletedReservations index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompletedReservation"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.CompletedReservations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.CompletedReservations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CompletedReservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CompletedReservations)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.CompletedReservations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CompletedReservations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CompletedReservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CompletedReservations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CompletedReservations object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.CompletedReservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompletedReservationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ActionsProfiles"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ActionsProfiles"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idActionProfile">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionsProfiles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionsProfiles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionsProfiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionsProfiles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ActionsProfiles_Company key.
            	FK_ActionsProfiles_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionsProfiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.GetByIdActionProfile(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ActionsProfiles index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idActionProfile"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ActionsProfiles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ActionsProfiles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ActionsProfiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ActionsProfiles)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ActionsProfiles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ActionsProfiles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ActionsProfiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ActionsProfiles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ActionsProfiles object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ActionsProfiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlActionsProfilesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsCategory"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idGisObjectsCategory">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsCategory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsCategory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsCategory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsCategory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.GetByIdGisObjectsCategory(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the GisObjectsCategory_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idGisObjectsCategory"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsCategory"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisObjectsCategory})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisObjectsCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisObjectsCategory)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisObjectsCategory object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisObjectsCategory object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisObjectsCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisObjectsCategory)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisObjectsCategory object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisObjectsCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsCategory"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsCategoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Users"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetByIdCompanyFromCompaniesPerUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Users objects from the datasource by ID_Company in the
            	CompaniesPerUser table. Table Users is related to table Company
            	through the (M:N) relationship defined in the CompaniesPerUser table.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Users objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idUser">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Users objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Users objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Users objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Users objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Company key.
            	FK_Users_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Users objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetByIdRole(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Role key.
            	FK_Users_Role Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRole"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Users objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetByUsername(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_username"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Users"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Users"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Users})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Users object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Users)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Users object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Users object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Users object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Users)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Users object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Users object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.getByUserNamePassword(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wraps the 'usr_Users_getByUserNamePassword' stored procedure. 
            </summary>	
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="password"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.CheckUser(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wraps the 'usr_Users_CheckUser' stored procedure. 
            </summary>	
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="password"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.GetRelatedAdminsForAdmin(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Users_GetRelatedAdminsForAdmin' stored procedure. 
            </summary>	
            <param name="adminId"> A <c>System.Int64?</c> instance.</param>
            <param name="targetRoleId"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUsersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider">
            <summary>
            Summary description for Procedures.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.Serialize(System.String)">
            <summary>
            Serializes the specified filename.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.Deserialize">
            <summary>
            Deserializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.GetProcedureBodyFromEmbeddedResource(System.String)">
            <summary>
            Get the query text from the embedded xml file.
            </summary>
            <param name="name">The name of the query.</param>
            <returns>the text of the query</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Boolean)">
            <summary>
            Get the command wrapper, either from the stored procedures or from the embedded queries.
            </summary>
            <param name="database">The database instance.</param>
            <param name="commandName">the name of the sp.</param>
            <param name="useStoredProcedure">Indicates if we want stored procedure.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Type,GlobSaldo.AVL.Data.SqlFilterParameterCollection,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the command wrapper for a dynamically generated query and
            optionally includes server-side paging.
            </summary>
            <param name="database"></param>
            <param name="commandName"></param>
            <param name="columnEnum"></param>
            <param name="parameters"></param>
            <param name="orderBy"></param>
            <param name="start"></param>
            <param name="pageLength"></param>
            <returns></returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.Current">
            <summary>
            Gets the current <see cref="T:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider"/> singleton instance.
            </summary>
            <value><see cref="T:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider"/></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.Procedures">
            <summary>
            Gets or sets the procedures.
            </summary>
            <value>An <see cref="T:System.Collections.ArrayList"/> of <see cref="T:GlobSaldo.AVL.Data.SqlClient.Procedure"/> objects.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:GlobSaldo.AVL.Data.SqlClient.Procedure"/> instance with the specified name.
            </summary>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.StoredProcedureProvider.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:GlobSaldo.AVL.Data.SqlClient.Procedure"/> instance at the specified index.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.Procedure">
            <summary>
            Represents a sql query.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.Procedure.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.Procedure"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.Procedure.Parameter(System.String)">
            <summary>
            Get the parameter from the specified name of the param.
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns></returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Procedure.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Procedure.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Procedure.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Procedure.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Procedure.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value></value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.Parameter">
            <summary>
            Respresents a query parameter.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.Parameter.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.Parameter"/> instance.
            </summary>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Parameter.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Parameter.SqlType">
            <summary>
            Gets or sets the SqlType.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Parameter.Direction">
            <summary>
            Gets or sets the Direction.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Parameter.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Parameter.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.Parameter.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value></value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.LocationAdditionalData"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idLocationAdditionalData">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LocationAdditionalData objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LocationAdditionalData objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LocationAdditionalData objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LocationAdditionalData objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.GetByIdLocation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_LocationAdditionalData_Locations key.
            	FK_LocationAdditionalData_Locations Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idLocation"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LocationAdditionalData objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.GetByIdLocationAdditionalData(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LocationAdditionalData index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idLocationAdditionalData"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.LocationAdditionalData"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.LocationAdditionalData})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.LocationAdditionalData object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.LocationAdditionalData)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.LocationAdditionalData object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.LocationAdditionalData object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.LocationAdditionalData object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.LocationAdditionalData)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.LocationAdditionalData object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.LocationAdditionalData object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileReservationsStatus"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileReservationsStatus"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileReservationStatus">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservationsStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservationsStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservationsStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservationsStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.GetByIdMobileReservationStatus(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileReservationStatus index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileReservationStatus"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileReservationsStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileReservationsStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileReservationsStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileReservationsStatus)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileReservationsStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileReservationsStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileReservationsStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileReservationsStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileReservationsStatus object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileReservationsStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileUser"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileUser">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUser objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUser objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUser objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUser objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.GetByIdMobileUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileUser index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileUser"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileUser"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileUser})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileUser object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileUser)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileUser object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileUser object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileUser object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileUser)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileUser object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileUser object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.GetByEmail(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_MobileUser_GetByEmail' stored procedure. 
            </summary>	
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.GetByIMEI(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_MobileUser_GetByIMEI' stored procedure. 
            </summary>	
            <param name="pImei"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.InOutDriver"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.InOutDriver"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idInOutDrivers">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.InOutDriver objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.InOutDriver objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.InOutDriver objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.InOutDriver objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.GetByIdDriver(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_InOutDriver_Driver key.
            	FK_InOutDriver_Driver Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idDriver"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.InOutDriver objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_InOutDriver_Vehicle key.
            	FK_InOutDriver_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.InOutDriver objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.GetByIdInOutDrivers(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_InOutDriver_1 index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idInOutDrivers"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.InOutDriver"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.InOutDriver})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.InOutDriver object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.InOutDriver)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.InOutDriver object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.InOutDriver object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.InOutDriver object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.InOutDriver)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.InOutDriver object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.InOutDriver object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.GetDriverInByIDVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_InOutDriver_GetDriverInByIDVehicle' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.GetDriverInByIDDriver(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_InOutDriver_GetDriverInByIDDriver' stored procedure. 
            </summary>	
            <param name="idDriver"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlInOutDriverProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisSearchRegions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSearchRegion">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisSearchRegions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisSearchRegions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisSearchRegions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisSearchRegions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_gisSearchRegions_gisRegions key.
            	FK_gisSearchRegions_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisSearchRegions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.GetByIdSearchRegion(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_gisSearchRegions index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSearchRegion"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisSearchRegions"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisSearchRegions})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisSearchRegions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisSearchRegions)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisSearchRegions object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisSearchRegions object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisSearchRegions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisSearchRegions)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisSearchRegions object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisSearchRegions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PenaltyReasons"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PenaltyReasons"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPenaltyReason">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyReasons objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyReasons objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyReasons objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyReasons objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.GetByName(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_PenaltyReasons index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PenaltyReasons"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.GetByIdPenaltyReason(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PenaltyReasons index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPenaltyReason"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PenaltyReasons"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PenaltyReasons})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PenaltyReasons object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PenaltyReasons)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PenaltyReasons object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PenaltyReasons object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PenaltyReasons object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PenaltyReasons)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PenaltyReasons object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PenaltyReasons object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyReasonsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisGeoLocation"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idGeoLocation">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisGeoLocation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisGeoLocation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisGeoLocation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisGeoLocation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.GetByIdGeoLocation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_gisGeoLocation index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idGeoLocation"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisGeoLocation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisGeoLocation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisGeoLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisGeoLocation)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisGeoLocation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisGeoLocation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisGeoLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisGeoLocation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisGeoLocation object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisGeoLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.StateInOut"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.StateInOut"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idStateChange">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StateInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StateInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StateInOut objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StateInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StateInOut_Vehicle key.
            	FK_StateInOut_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StateInOut objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.GetByIdStateChange(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_StateIoOut index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idStateChange"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.StateInOut"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.StateInOut})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.StateInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.StateInOut)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.StateInOut object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.StateInOut object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.StateInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.StateInOut)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.StateInOut object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.StateInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlStateInOutProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorMonthlyFees"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSubcontractorMonthlyFees">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorMonthlyFees objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorMonthlyFees objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorMonthlyFees objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorMonthlyFees objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorMonthlyFees_Vehicle1 key.
            	FK_SubcontractorMonthlyFees_Vehicle1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorMonthlyFees objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.GetByIdSubcontractorMonthlyFees(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SubcontractorMonthlyFees index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSubcontractorMonthlyFees"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorMonthlyFees"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SubcontractorMonthlyFees})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorMonthlyFees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorMonthlyFees)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SubcontractorMonthlyFees object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorMonthlyFees object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorMonthlyFees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorMonthlyFees)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorMonthlyFees object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SubcontractorMonthlyFees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.GetAllEligableForSelection(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'usr_SubcontractorMonthlyFees_GetAllEligableForSelection' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ShiftInOut"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idShiftInOut">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShiftInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShiftInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShiftInOut objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShiftInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.GetByIdDriver(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ShiftInOut_Driver key.
            	FK_ShiftInOut_Driver Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idDriver"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShiftInOut objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXShiftInOutID_Vehicle index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.GetByIdShiftInOut(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ShiftInOut index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idShiftInOut"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ShiftInOut"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ShiftInOut})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ShiftInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ShiftInOut)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ShiftInOut object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ShiftInOut object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ShiftInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ShiftInOut)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ShiftInOut object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ShiftInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.GetByIDVehicleAndDateTimeNull(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_ShiftInOut_GetByIDVehicleAndDateTimeNull' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.GetByIDVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_ShiftInOut_GetByIDVehicle' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSubcontractorPendingPhoneCalls">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetByIdObjectFrom(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorPendingPhoneCalls_gisObjects key.
            	FK_SubcontractorPendingPhoneCalls_gisObjects Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idObjectFrom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetByIdRegionFrom(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorPendingPhoneCalls_gisRegions key.
            	FK_SubcontractorPendingPhoneCalls_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegionFrom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorPendingPhoneCalls_PhoneCalls key.
            	FK_SubcontractorPendingPhoneCalls_PhoneCalls Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorPendingPhoneCalls_Users key.
            	FK_SubcontractorPendingPhoneCalls_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorPendingPhoneCalls_Vehicle key.
            	FK_SubcontractorPendingPhoneCalls_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.GetByIdSubcontractorPendingPhoneCalls(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SubcontractorPendingPhoneCalls index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSubcontractorPendingPhoneCalls"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.UserInOut"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.UserInOut"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idUserLogInOut">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UserInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UserInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UserInOut objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UserInOut objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXUserInOutID_User index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.GetByIdUserLogInOut(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserLogInOut index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUserLogInOut"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.UserInOut"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.UserInOut})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.UserInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.UserInOut)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.UserInOut object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.UserInOut object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.UserInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.UserInOut)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.UserInOut object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.UserInOut object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.UpdateQueryLogOutUser(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_UserInOut_UpdateQueryLogOutUser' stored procedure. 
            </summary>	
            <param name="dateOut"> A <c>System.DateTime?</c> instance.</param>
            <param name="idUser"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.CloseAllOpenLogins(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'usr_UserInOut_CloseAllOpenLogins' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.CloseAllOpenLoginsForExtension(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_UserInOut_CloseAllOpenLoginsForExtension' stored procedure. 
            </summary>	
            <param name="extension"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUserInOutProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehicleConnections"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehicleConnections"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idVehicleConnection">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleConnections objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleConnections objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleConnections objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleConnections objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_VehicleConnections_Vehicle key.
            	FK_VehicleConnections_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleConnections objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.GetByIdVehicleConnection(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VehicleConnections index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicleConnection"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.VehicleConnections"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.VehicleConnections})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehicleConnections object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehicleConnections)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.VehicleConnections object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehicleConnections object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehicleConnections object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehicleConnections)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehicleConnections object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.VehicleConnections object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleConnectionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedRegionsTo"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idReceivedRegionsTo">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedRegionsTo objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedRegionsTo objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedRegionsTo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedRegionsTo objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReceivedRegionsTo_gisRegions key.
            	FK_ReceivedRegionsTo_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedRegionsTo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReceivedRegionsTo_Vehicle key.
            	FK_ReceivedRegionsTo_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedRegionsTo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.GetByIdReceivedRegionsTo(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReceivedRegionsTo index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReceivedRegionsTo"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ReceivedRegionsTo"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ReceivedRegionsTo})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedRegionsTo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedRegionsTo)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ReceivedRegionsTo object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedRegionsTo object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedRegionsTo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedRegionsTo)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedRegionsTo object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ReceivedRegionsTo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SensorMapping"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SensorMapping"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.GetByIdUnitFromUnitToSensorMapping(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets SensorMapping objects from the datasource by ID_Unit in the
            	UnitToSensorMapping table. Table SensorMapping is related to table Unit
            	through the (M:N) relationship defined in the UnitToSensorMapping table.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUnit"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of SensorMapping objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSensorMapping">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SensorMapping objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SensorMapping objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SensorMapping objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SensorMapping objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.GetByIdSensorMapping(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SensorMapping index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSensorMapping"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SensorMapping"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SensorMapping})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SensorMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SensorMapping)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SensorMapping object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SensorMapping object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SensorMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SensorMapping)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SensorMapping object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SensorMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSensorMappingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneCalls"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneCalls"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPhoneCall">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PhoneCalls index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PhoneCalls"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PhoneCalls})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneCalls)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PhoneCalls object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneCalls object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneCalls)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneCalls object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.GetByGroupCode(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_PhoneCalls_GetByGroupCode' stored procedure. 
            </summary>	
            <param name="groupCode"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneCallsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Reservations"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Reservations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idReservation">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Reservations_Company key.
            	FK_Reservations_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdAddressFrom(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Reservations_gisAddressModel key.
            	FK_Reservations_gisAddressModel Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idAddressFrom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdObjectFrom(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Reservations_gisObjects key.
            	FK_Reservations_gisObjects Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idObjectFrom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdRegionFrom(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Reservations_gisRegions key.
            	FK_Reservations_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegionFrom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdMessageStatus(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Reservations_MessageStatus key.
            	FK_Reservations_MessageStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMessageStatus"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Reservations_PhoneCalls key.
            	FK_Reservations_PhoneCalls Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Reservations_Users key.
            	FK_Reservations_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Reservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdMessageStatusNumberOfRetriesDateTimeLastAlarm(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXReservationsID_MessageStatusNumberOfRetriesDateTimeLastAlarm index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMessageStatus"></param>
            <param name="_numberOfRetries"></param>
            <param name="_dateTimeLastAlarm"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByNumberOfRetriesDateTimeLastAlarm(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXReservationsNumberOfRetriesDateTimeLastAlarm index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_numberOfRetries"></param>
            <param name="_dateTimeLastAlarm"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetByIdReservation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Reservations index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReservation"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Reservations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Reservations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Reservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Reservations)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Reservations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Reservations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Reservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Reservations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Reservations object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Reservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.GetPending(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'usr_Reservations_GetPending' stored procedure. 
            </summary>	
            <param name="numOfRetries"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReservationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Unit"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.GetByIdSensorMappingFromUnitToSensorMapping(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Unit objects from the datasource by ID_SensorMapping in the
            	UnitToSensorMapping table. Table Unit is related to table SensorMapping
            	through the (M:N) relationship defined in the UnitToSensorMapping table.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSensorMapping"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Unit objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idUnit">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Unit objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Unit objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Unit objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Unit objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Unit_Company key.
            	FK_Unit_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Unit objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.GetByIdUnit(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Unit index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUnit"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Unit"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Unit})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Unit object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Unit)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Unit object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Unit object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Unit object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Unit)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Unit object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Unit object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.GetNonMountedUnits(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Unit_GetNonMountedUnits' stored procedure. 
            </summary>	
            <param name="companyId"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ActionProfileItems"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ActionProfileItems"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idActionProfileItems">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionProfileItems objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionProfileItems objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionProfileItems objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionProfileItems objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.GetByIdActionProfile(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ActionProfileItems_ActionsProfiles key.
            	FK_ActionProfileItems_ActionsProfiles Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idActionProfile"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionProfileItems objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.GetByIdEventAction(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ActionProfileItems_EventActions1 key.
            	FK_ActionProfileItems_EventActions1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idEventAction"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ActionProfileItems objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.GetByIdActionProfileItems(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ActionProfileItems index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idActionProfileItems"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ActionProfileItems"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ActionProfileItems})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ActionProfileItems object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ActionProfileItems)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ActionProfileItems object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ActionProfileItems object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ActionProfileItems object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ActionProfileItems)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ActionProfileItems object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ActionProfileItems object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlActionProfileItemsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CompanyTimeZone"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idCompanyTimeZone">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompanyTimeZone objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompanyTimeZone objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompanyTimeZone objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompanyTimeZone objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.GetByIdCompanyTimeZone(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TimeZone index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompanyTimeZone"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.CompanyTimeZone"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.CompanyTimeZone})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CompanyTimeZone object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CompanyTimeZone)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.CompanyTimeZone object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CompanyTimeZone object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CompanyTimeZone object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CompanyTimeZone)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CompanyTimeZone object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.CompanyTimeZone object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileOrderStatus"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileOrderStatus"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileOrderStatus">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrderStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrderStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrderStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrderStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.GetByIdMobileOrderStatus(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileOrderStatus index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileOrderStatus"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileOrderStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileOrderStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileOrderStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileOrderStatus)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileOrderStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileOrderStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileOrderStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileOrderStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileOrderStatus object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileOrderStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrderStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MessageStatus"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MessageStatus"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMessageStatus">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MessageStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MessageStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MessageStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MessageStatus objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.GetByName(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_MessageStatus index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MessageStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.GetByIdMessageStatus(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MessageStatus index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMessageStatus"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MessageStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MessageStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MessageStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MessageStatus)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MessageStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MessageStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MessageStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MessageStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MessageStatus object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MessageStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMessageStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ClientPhoneNumbers"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ClientPhoneNumbers"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idClientPhoneNumbers">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ClientPhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ClientPhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ClientPhoneNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ClientPhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.GetByIdClient(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ClientPhoneNumbers_Clients key.
            	FK_ClientPhoneNumbers_Clients Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idClient"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ClientPhoneNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.GetByIdClientPhoneNumbers(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ClientPhoneNumbers index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idClientPhoneNumbers"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ClientPhoneNumbers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ClientPhoneNumbers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ClientPhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ClientPhoneNumbers)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ClientPhoneNumbers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ClientPhoneNumbers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ClientPhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ClientPhoneNumbers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ClientPhoneNumbers object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ClientPhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlClientPhoneNumbersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsSubCategory"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsSubCategory"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idGisObjectsSubCategory">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsSubCategory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsSubCategory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsSubCategory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsSubCategory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.GetByIdGisObjectsCategory(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GisObjectsSubCategory_GisObjectsCategory key.
            	FK_GisObjectsSubCategory_GisObjectsCategory Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idGisObjectsCategory"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjectsSubCategory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.GetByIdGisObjectsSubCategory(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the GisObjectsSubCategory_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idGisObjectsSubCategory"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsSubCategory"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisObjectsSubCategory})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisObjectsSubCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisObjectsSubCategory)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisObjectsSubCategory object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisObjectsSubCategory object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisObjectsSubCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisObjectsSubCategory)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisObjectsSubCategory object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisObjectsSubCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsSubCategoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ShortMessages"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ShortMessages"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idShortMessage">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShortMessages objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShortMessages objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShortMessages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ShortMessages objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.GetByIdShortMessage(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ShortMessages index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idShortMessage"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ShortMessages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ShortMessages})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ShortMessages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ShortMessages)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ShortMessages object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ShortMessages object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ShortMessages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ShortMessages)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ShortMessages object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ShortMessages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlShortMessagesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SystemLog"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SystemLog"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSystemLog">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SystemLog objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SystemLog objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SystemLog objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SystemLog objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SystemLog_Company key.
            	FK_SystemLog_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SystemLog objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.GetByIdSystemLog(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SystemLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSystemLog"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SystemLog"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SystemLog})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SystemLog object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SystemLog)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SystemLog object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SystemLog object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SystemLog object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SystemLog)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SystemLog object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SystemLog object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSystemLogProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SentRegionsTo"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SentRegionsTo"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSentRegionsTo">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentRegionsTo objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentRegionsTo objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentRegionsTo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentRegionsTo objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SentRegionsTo_gisRegions key.
            	FK_SentRegionsTo_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentRegionsTo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SentRegionsTo_Vehicle key.
            	FK_SentRegionsTo_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentRegionsTo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.GetByIdSentRegionsTo(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SentRegionsTo_1 index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSentRegionsTo"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SentRegionsTo"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SentRegionsTo})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SentRegionsTo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SentRegionsTo)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SentRegionsTo object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SentRegionsTo object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SentRegionsTo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SentRegionsTo)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SentRegionsTo object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SentRegionsTo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentRegionsToProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedFreeText"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idReceivedFreeText">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedFreeText objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedFreeText objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedFreeText objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedFreeText objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReceivedFreeText_Users key.
            	FK_ReceivedFreeText_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedFreeText objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReceivedFreeText_Vehicle key.
            	FK_ReceivedFreeText_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedFreeText objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.GetByIdReceivedFreeText(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReceivedFreeText index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReceivedFreeText"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ReceivedFreeText"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ReceivedFreeText})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedFreeText object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedFreeText)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ReceivedFreeText object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedFreeText object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedFreeText object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedFreeText)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedFreeText object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ReceivedFreeText object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersPerClients"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPhoneNumbersPerClient">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersPerClients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersPerClients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersPerClients objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersPerClients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.GetByIdClient(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PhoneNumbersPerClients_Clients key.
            	FK_PhoneNumbersPerClients_Clients Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idClient"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersPerClients objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.GetByIdPhoneNumbersPerClient(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PhoneNumbersPerClients index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneNumbersPerClient"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersPerClients"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PhoneNumbersPerClients})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumbersPerClients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumbersPerClients)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PhoneNumbersPerClients object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumbersPerClients object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumbersPerClients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumbersPerClients)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumbersPerClients object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PhoneNumbersPerClients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersPerClients"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersPerClientsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbers"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_phoneNumberDb">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.GetByPhoneNumberDb(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PhoneNumbers index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_phoneNumberDb"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PhoneNumbers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumbers)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PhoneNumbers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumbers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumbers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumbers object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehicleStates"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehicleStates"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idVehicleState">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleStates objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleStates objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleStates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehicleStates objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.GetByName(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_VehicleStates index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.VehicleStates"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.GetByIdVehicleState(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VehicleStates index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicleState"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.VehicleStates"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.VehicleStates})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehicleStates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehicleStates)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.VehicleStates object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehicleStates object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehicleStates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehicleStates)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehicleStates object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.VehicleStates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleStatesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.LastLocation"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idLocation">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LastLocation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LastLocation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LastLocation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.LastLocation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.GetByIdLocation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LastLocation index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idLocation"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.LastLocation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.LastLocation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.LastLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.LastLocation)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.LastLocation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.LastLocation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.LastLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.LastLocation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.LastLocation object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.LastLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PaymentOptions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPaymentOption">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PaymentOptions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PaymentOptions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PaymentOptions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PaymentOptions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.GetByIdPaymentOption(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PaymentOptions index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPaymentOption"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PaymentOptions"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PaymentOptions})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PaymentOptions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PaymentOptions)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PaymentOptions object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PaymentOptions object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PaymentOptions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PaymentOptions)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PaymentOptions object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PaymentOptions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.AddressModelDescription"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idAddressModelDescription">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.AddressModelDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.AddressModelDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.AddressModelDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.AddressModelDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.GetByIdStreet(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AddressModelDescription_gisStreets key.
            	FK_AddressModelDescription_gisStreets Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idStreet"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.AddressModelDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StreetDescription_Users key.
            	FK_StreetDescription_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.AddressModelDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.GetByIdAddressModelDescription(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IStreetDescription_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idAddressModelDescription"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.AddressModelDescription"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.AddressModelDescription})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.AddressModelDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.AddressModelDescription)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.AddressModelDescription object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.AddressModelDescription object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.AddressModelDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.AddressModelDescription)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.AddressModelDescription object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.AddressModelDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.GetIDStreetHouseNumber(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'usr_AddressModelDescription_GetIDStreetHouseNumber' stored procedure. 
            </summary>	
            <param name="idStreet"> A <c>System.String</c> instance.</param>
            <param name="houseNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReasonsForUserCancelation"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idReasonsForUserCancelation">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonsForUserCancelation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonsForUserCancelation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonsForUserCancelation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonsForUserCancelation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.GetByIdReasonsForUserCancelation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReasonsForUserCancelation index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReasonsForUserCancelation"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ReasonsForUserCancelation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ReasonsForUserCancelation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReasonsForUserCancelation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReasonsForUserCancelation)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ReasonsForUserCancelation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReasonsForUserCancelation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReasonsForUserCancelation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReasonsForUserCancelation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReasonsForUserCancelation object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ReasonsForUserCancelation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedShortMessage"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idReceivedShortMessage">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedShortMessage objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedShortMessage objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedShortMessage objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedShortMessage objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.GetByIdShortMessage(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReceivedShortMessage_ShortMessages key.
            	FK_ReceivedShortMessage_ShortMessages Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idShortMessage"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedShortMessage objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReceivedShortMessage_Vehicle key.
            	FK_ReceivedShortMessage_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedShortMessage objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.GetByIdReceivedShortMessage(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReceivedShortMessage index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReceivedShortMessage"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ReceivedShortMessage"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ReceivedShortMessage})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedShortMessage object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedShortMessage)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ReceivedShortMessage object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedShortMessage object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedShortMessage object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedShortMessage)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedShortMessage object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ReceivedShortMessage object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRoleProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Role"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Role"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idRole">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Role objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Role objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Role objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Role objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.GetByName(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Role"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.GetByIdRole(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Role index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRole"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Role"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Role})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Role object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Role)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Role object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Role object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Role object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Role)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Role object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Role object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRoleProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRoleProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRoleProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SentMessagesToVehicles"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SentMessagesToVehicles"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSentMessagesToVehicles">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentMessagesToVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentMessagesToVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentMessagesToVehicles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentMessagesToVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.GetByIdOrders(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SentMessagesToVehicles_Orders key.
            	FK_SentMessagesToVehicles_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrders"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentMessagesToVehicles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.GetByIdSentMessagesToVehicles(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SentMessagesToVehicles index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSentMessagesToVehicles"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SentMessagesToVehicles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SentMessagesToVehicles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SentMessagesToVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SentMessagesToVehicles)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SentMessagesToVehicles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SentMessagesToVehicles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SentMessagesToVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SentMessagesToVehicles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SentMessagesToVehicles object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SentMessagesToVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentMessagesToVehiclesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.IpParameters"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idIpParameters">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.IpParameters objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.IpParameters objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.IpParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.IpParameters objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.GetByIdMessageStatus(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_IpParameters_MessageStatus key.
            	FK_IpParameters_MessageStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMessageStatus"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.IpParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_IpParameters_Users key.
            	FK_IpParameters_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.IpParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_IpParameters_Vehicle key.
            	FK_IpParameters_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.IpParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.GetByIdIpParameters(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_IpParameters index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idIpParameters"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.IpParameters"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.IpParameters})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.IpParameters object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.IpParameters)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.IpParameters object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.IpParameters object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.IpParameters object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.IpParameters)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.IpParameters object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.IpParameters object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.GetPending(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'usr_IpParameters_GetPending' stored procedure. 
            </summary>	
            <param name="numberOfRetries"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisRegions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idRegion">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisRegions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisRegions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisRegions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisRegions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_gisRegions_Company key.
            	FK_gisRegions_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisRegions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_gisRegions index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisRegions"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisRegions})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisRegions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisRegions)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisRegions object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisRegions object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisRegions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisRegions)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisRegions object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisRegions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisRegions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisRegionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idVehiclesNullSelectedByPhoneCall">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.GetByIdVehiclesNullSelectedByPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VehiclesNullSelectedByPhoneCall index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehiclesNullSelectedByPhoneCall"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesNullSelectedByPhoneCallProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbers"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Company"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.GetByIdUserFromCompaniesPerUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Company objects from the datasource by ID_User in the
            	CompaniesPerUser table. Table Company is related to table Users
            	through the (M:N) relationship defined in the CompaniesPerUser table.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Company objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idCompany">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Company objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Company objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Company objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Company objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.GetByIdCompanyTimeZone(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Company_TimeZone key.
            	FK_Company_TimeZone Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompanyTimeZone"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Company objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Company index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Company"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Company})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Company object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Company)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Company object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Company object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Company object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Company)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Company object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Company object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Penalties"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Penalties"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPenalty">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.GetByIdDriver(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Penalties_Driver key.
            	FK_Penalties_Driver Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idDriver"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.GetByIdReasonForPenalty(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Penalties_PenaltyReasons key.
            	FK_Penalties_PenaltyReasons Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReasonForPenalty"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Penalties_PhoneCalls key.
            	FK_Penalties_PhoneCalls Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Penalties_Users key.
            	FK_Penalties_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Penalties objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.GetByIdPenalty(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Penalties index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPenalty"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Penalties"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Penalties})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Penalties object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Penalties)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Penalties object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Penalties object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Penalties object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Penalties)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Penalties object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Penalties object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltiesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileUserHistory"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileUserHistory">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUserHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUserHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUserHistory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileUserHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.GetByIdMobileUserHistory(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileUserHistory index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileUserHistory"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileUserHistory"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileUserHistory})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileUserHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileUserHistory)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileUserHistory object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileUserHistory object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileUserHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileUserHistory)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileUserHistory object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileUserHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.OrdersSource"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.OrdersSource"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idOrdersSource">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersSource objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersSource objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersSource objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersSource objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.GetByIdOrdersSource(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_OrdersSource index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrdersSource"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.OrdersSource"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.OrdersSource})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.OrdersSource object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.OrdersSource)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.OrdersSource object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.OrdersSource object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.OrdersSource object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.OrdersSource)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.OrdersSource object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.OrdersSource object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersSourceProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.EventActions"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.EventActions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idEventActions">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.EventActions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.EventActions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.EventActions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.EventActions objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.GetByIdEventActions(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EventActions index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idEventActions"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.EventActions"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.EventActions})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.EventActions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.EventActions)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.EventActions object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.EventActions object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.EventActions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.EventActions)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.EventActions object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.EventActions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlEventActionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.FiskalReceipt"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.FiskalReceipt"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idFiskalnReceipt">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.GetByIdLocation(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_FiskalReceipt_Location key.
            	FK_FiskalReceipt_Location Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idLocation"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.GetByIdOrder(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_FiskalReceipt_Order key.
            	FK_FiskalReceipt_Order Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrder"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.GetByIdUnit(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_FiskalReceipt_Unit key.
            	FK_FiskalReceipt_Unit Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUnit"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_FiskalReceipt_Vehicle key.
            	FK_FiskalReceipt_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.FiskalReceipt objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.GetByIdFiskalnReceipt(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_FiskalReceipt index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idFiskalnReceipt"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.FiskalReceipt"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.FiskalReceipt})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.FiskalReceipt object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.FiskalReceipt)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.FiskalReceipt object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.FiskalReceipt object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.FiskalReceipt object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.FiskalReceipt)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.FiskalReceipt object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.FiskalReceipt object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlFiskalReceiptProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.StreetsDistinct"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.StreetsDistinct"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_streetIdSound">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StreetsDistinct objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StreetsDistinct objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StreetsDistinct objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.StreetsDistinct objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.GetByStreetIdSound(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_StreetsDistinct index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_streetIdSound"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.StreetsDistinct"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.StreetsDistinct})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.StreetsDistinct object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.StreetsDistinct)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.StreetsDistinct object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.StreetsDistinct object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.StreetsDistinct object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.StreetsDistinct)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.StreetsDistinct object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.StreetsDistinct object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlStreetsDistinctProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Vehicle"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Vehicle"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idVehicle">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Vehicle objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Vehicle objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Vehicle objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Vehicle objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Vehicle_Company key.
            	FK_Vehicle_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Vehicle objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.GetByIdUnit(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Vehicle_Unit key.
            	FK_Vehicle_Unit Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUnit"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Vehicle objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Vehicle index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Vehicle"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Vehicle})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Vehicle object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Vehicle)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Vehicle object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Vehicle object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Vehicle object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Vehicle)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Vehicle object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Vehicle object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.GetNoUnitVehicles(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Vehicle_GetNoUnitVehicles' stored procedure. 
            </summary>	
            <param name="companyId"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.SpeedLimitCrossPaged(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'usr_Vehicle_SpeedLimitCrossPaged' stored procedure. 
            </summary>	
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="idCompany"> A <c>System.Int64?</c> instance.</param>
            <param name="speed"> A <c>System.Decimal?</c> instance.</param>
            <param name="pageindex"> A <c>System.Int32?</c> instance.</param>
            <param name="pagesize"> A <c>System.Int32?</c> instance.</param>
            <param name="maxPages"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.GetMountedVehiclesByIDCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Vehicle_GetMountedVehiclesByIDCompany' stored procedure. 
            </summary>	
            <param name="companyId"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehicleProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardPerClients"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idRfIdCardPerClients">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardPerClients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardPerClients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardPerClients objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardPerClients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.GetByIdClient(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_RfIdCardPerClients_Clients key.
            	FK_RfIdCardPerClients_Clients Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idClient"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardPerClients objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.GetByIdRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXRfIdCardPerClientsID_RfIdCard index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRfIdCard"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.GetByIdRfIdCardPerClients(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_RfIdCardPerClients_1 index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRfIdCardPerClients"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardPerClients"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.RfIdCardPerClients})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RfIdCardPerClients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RfIdCardPerClients)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.RfIdCardPerClients object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RfIdCardPerClients object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RfIdCardPerClients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RfIdCardPerClients)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RfIdCardPerClients object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.RfIdCardPerClients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.GetAllRfIdCardPerClient(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'usr_RfIdCardPerClients_GetAllRfIdCardPerClient' stored procedure. 
            </summary>	
            <param name="idRfIdCard"> A <c>System.Int64?</c> instance.</param>
            <param name="permanentlyDiscarded"> A <c>System.Boolean?</c> instance.</param>
            <param name="takenBack"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCards"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCards"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idRfIdCard">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCards objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCards objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCards objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCards objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXRfIdCardsID_Company index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.GetBySerialNumber(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXRfIdCardsSerialNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_serialNumber"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.GetByIdRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_RfIdCards index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRfIdCard"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.RfIdCards"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.RfIdCards})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RfIdCards object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RfIdCards)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.RfIdCards object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RfIdCards object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RfIdCards object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RfIdCards)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RfIdCards object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.RfIdCards object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.DeleteEdnaKarticka(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_RfIdCards_DeleteEdnaKarticka' stored procedure. 
            </summary>	
            <param name="strDescription"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.GetValidForRfCardClient(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_RfIdCards_GetValidForRfCardClient' stored procedure. 
            </summary>	
            <param name="serialNumberRfIdCard"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.GetBySerialNumberRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_RfIdCards_GetBySerialNumberRfIdCard' stored procedure. 
            </summary>	
            <param name="serialNumberRfIdCard"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileOrders"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileOrders"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileOrders">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetByIdMobileOrderStatus(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MobileOrders_MobileOrderStatus key.
            	FK_MobileOrders_MobileOrderStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileOrderStatus"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetByIdOrder(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MobileOrders_Orders key.
            	FK_MobileOrders_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrder"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MobileOrders_Vehicle key.
            	FK_MobileOrders_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetByIdMobileOrders(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileOrders index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileOrders"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileOrders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileOrders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileOrders)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileOrders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileOrders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileOrders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileOrders object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetByIdVehicleAndStatus(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_MobileOrders_GetByIdVehicleAndStatus' stored procedure. 
            </summary>	
            <param name="idVehicle"> A <c>System.Int64?</c> instance.</param>
            <param name="idMobileOrderStatus"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.GetByIdOrder(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_MobileOrders_GetByIdOrder' stored procedure. 
            </summary>	
            <param name="idOrder"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.LocationAdditionalData"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLocationAdditionalDataProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CommParameters"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idCommParameter">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CommParameters objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CommParameters objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CommParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CommParameters objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.GetByIdMessageStatus(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CommParameters_MessageStatus key.
            	FK_CommParameters_MessageStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMessageStatus"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CommParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CommParameters_Users key.
            	FK_CommParameters_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CommParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CommParameters_Vehicle key.
            	FK_CommParameters_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CommParameters objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.GetByIdCommParameter(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CommParameters index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCommParameter"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.CommParameters"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.CommParameters})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CommParameters object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CommParameters)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.CommParameters object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CommParameters object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CommParameters object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CommParameters)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CommParameters object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.CommParameters object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.GetPedningCommParameter(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'usr_CommParameters_GetPedningCommParameter' stored procedure. 
            </summary>	
            <param name="numOfRetries"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CommParameters"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCommParametersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisStreets"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idStreet">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisStreets objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisStreets objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisStreets objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisStreets objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.GetByIdStreet(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the gisStreets_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idStreet"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisStreets"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisStreets})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisStreets object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisStreets)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisStreets object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisStreets object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisStreets object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisStreets)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisStreets object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisStreets object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.GetByName(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_gisStreets_GetByName' stored procedure. 
            </summary>	
            <param name="streetName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorGsmNumbers"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorGsmNumbers"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSubcontractorGsmNumber">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorGsmNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorGsmNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorGsmNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorGsmNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorGsmNumbers_Vehicle key.
            	FK_SubcontractorGsmNumbers_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorGsmNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.GetByIdSubcontractorGsmNumber(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SubcontractorGsmNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSubcontractorGsmNumber"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorGsmNumbers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SubcontractorGsmNumbers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorGsmNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorGsmNumbers)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SubcontractorGsmNumbers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorGsmNumbers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorGsmNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorGsmNumbers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorGsmNumbers object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SubcontractorGsmNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorGsmNumbersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idReceivedMessagesFromVehicles">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.GetByIdOrders(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReceivedMessagesFromVehicles_Orders key.
            	FK_ReceivedMessagesFromVehicles_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrders"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.GetByIdReceivedMessagesFromVehicles(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReceivedMessagesFromVehicles index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReceivedMessagesFromVehicles"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.GetByIdOrderNotRead(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_ReceivedMessagesFromVehicles_GetByIdOrderNotRead' stored procedure. 
            </summary>	
            <param name="idOrder"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Driver"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idDriver">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Driver objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Driver objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Driver objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Driver objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Driver_Company key.
            	FK_Driver_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Driver objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetByIdDriver(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Driver index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idDriver"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Driver"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Driver})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Driver object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Driver)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Driver object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Driver object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Driver object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Driver)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Driver object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Driver object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetByIDRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Driver_GetByIDRfIdCard' stored procedure. 
            </summary>	
            <param name="idRfIdCard"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetBySerialSerialNumberRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_Driver_GetBySerialSerialNumberRfIdCard' stored procedure. 
            </summary>	
            <param name="serialSerialNumberRfIdCard"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetAvaliableDrivers(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_Driver_GetAvaliableDrivers' stored procedure. 
            </summary>	
            <param name="idCompany"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.GetBySerialNumberRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_Driver_GetBySerialNumberRfIdCard' stored procedure. 
            </summary>	
            <param name="serialNumberRfIdCard"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlDriverProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.OrdersCanceledByDrivers"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.OrdersCanceledByDrivers"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idOrdersCanceledByDrivers">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersCanceledByDrivers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersCanceledByDrivers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersCanceledByDrivers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersCanceledByDrivers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.GetByIdOrder(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_OrdersCanceledByDrivers_Orders key.
            	FK_OrdersCanceledByDrivers_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrder"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersCanceledByDrivers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.GetByIdOrdersCanceledByDrivers(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_OrdersCanceledByDrivers index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrdersCanceledByDrivers"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.OrdersCanceledByDrivers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.OrdersCanceledByDrivers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.OrdersCanceledByDrivers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.OrdersCanceledByDrivers)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.OrdersCanceledByDrivers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.OrdersCanceledByDrivers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.OrdersCanceledByDrivers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.OrdersCanceledByDrivers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.OrdersCanceledByDrivers object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.OrdersCanceledByDrivers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersCanceledByDriversProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPenaltyPerDriverPerPeriod">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.GetByIdDriver(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PenaltyPerDriverPerPeriod_Driver key.
            	FK_PenaltyPerDriverPerPeriod_Driver Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idDriver"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.GetByIdPenaltyPerDriverPerPeriod(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PenaltyPerDriverPerPeriod index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPenaltyPerDriverPerPeriod"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.GetActivePenaltyByIdDriver(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_PenaltyPerDriverPerPeriod_GetActivePenaltyByIdDriver' stored procedure. 
            </summary>	
            <param name="idDriver"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PaymentOptions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPaymentOptionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.BlackList"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idBlackList">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.BlackList objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.BlackList objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.BlackList objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.BlackList objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.GetByIdBlackList(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_BlackList index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idBlackList"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.BlackList"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.BlackList})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.BlackList object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.BlackList)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.BlackList object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.BlackList object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.BlackList object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.BlackList)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.BlackList object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.BlackList object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.GetByEmailOrImeiOrPhoneNumber(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wraps the 'usr_BlackList_GetByEmailOrImeiOrPhoneNumber' stored procedure. 
            </summary>	
            <param name="pEmail"> A <c>System.String</c> instance.</param>
            <param name="pImei"> A <c>System.String</c> instance.</param>
            <param name="pPhoneNumber"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisPhoneNumbers"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisPhoneNumbers"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_phoneNumber">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisPhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisPhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisPhoneNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisPhoneNumbers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_gisPhoneNumbers_gisRegions key.
            	FK_gisPhoneNumbers_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisPhoneNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.GetByIdObject(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the gisObjects_PhoneNumbers_FK1 key.
            	gisObjects_PhoneNumbers_FK1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idObject"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisPhoneNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.GetByIdStreet(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the gisStreets_PhoneNumbers_FK1 key.
            	gisStreets_PhoneNumbers_FK1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idStreet"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisPhoneNumbers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.GetByPhoneNumber(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PhoneNumbers_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_phoneNumber"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisPhoneNumbers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisPhoneNumbers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisPhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisPhoneNumbers)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisPhoneNumbers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisPhoneNumbers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisPhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisPhoneNumbers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisPhoneNumbers object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisPhoneNumbers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisPhoneNumbersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisObjects"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idObject">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjects objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjects objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjects objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjects objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.GetByIdGisObjectsSubCategory(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_gisObjects_GisObjectsSubCategory key.
            	FK_gisObjects_GisObjectsSubCategory Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idGisObjectsSubCategory"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjects objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_gisObjects_gisRegions key.
            	FK_gisObjects_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjects objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.GetByIdStreet(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the gisStreets_gisObjects_FK1 key.
            	gisStreets_gisObjects_FK1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idStreet"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisObjects objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.GetByIdObject(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the gisObjects_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idObject"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisObjects"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisObjects})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisObjects object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisObjects)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisObjects object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisObjects object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisObjects object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisObjects)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisObjects object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisObjects object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.getByObjectName(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_gisObjects_getByObjectName' stored procedure. 
            </summary>	
            <param name="objectName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisGeoLocation"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisGeoLocationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SmSsent"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSmSsent">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSsent objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSsent objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSsent objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSsent objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.GetByIdOrder(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SMSsent_Orders key.
            	FK_SMSsent_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrder"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSsent objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.GetByIdSmSsent(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SMSsent index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSmSsent"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SmSsent"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SmSsent})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SmSsent object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SmSsent)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SmSsent object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SmSsent object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SmSsent object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SmSsent)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SmSsent object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SmSsent object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.GetUnSentSmsMessages(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'usr_SMSsent_GetUnSentSmsMessages' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ShiftInOut"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlShiftInOutProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idVehicleSelectedByPhoneCall">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.GetByIdVehicleSelectedByPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VehiclesSelectedByPhoneCall index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicleSelectedByPhoneCall"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesSelectedByPhoneCallProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUsersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Users"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUsersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUsersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SentPopUpMessage"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSentMessageToVehicle">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentPopUpMessage objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentPopUpMessage objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentPopUpMessage objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentPopUpMessage objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SentMessagesToVehicle_Users key.
            	FK_SentMessagesToVehicle_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentPopUpMessage objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SentMessagesToVehicle_Vehicle key.
            	FK_SentMessagesToVehicle_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SentPopUpMessage objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.GetByIdSentMessageToVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SentMessagesToVehicle index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSentMessageToVehicle"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SentPopUpMessage"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SentPopUpMessage})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SentPopUpMessage object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SentPopUpMessage)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SentPopUpMessage object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SentPopUpMessage object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SentPopUpMessage object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SentPopUpMessage)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SentPopUpMessage object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SentPopUpMessage object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedMessagesFromVehiclesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Company"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ServiceEvaluation"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ServiceEvaluation"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSeviceEvaluation">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ServiceEvaluation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ServiceEvaluation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ServiceEvaluation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ServiceEvaluation objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.GetByIdSeviceEvaluation(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SeviceEvaluation index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSeviceEvaluation"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ServiceEvaluation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ServiceEvaluation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ServiceEvaluation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ServiceEvaluation)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ServiceEvaluation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ServiceEvaluation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ServiceEvaluation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ServiceEvaluation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ServiceEvaluation object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ServiceEvaluation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlServiceEvaluationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.UnitHistory"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.UnitHistory"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idUnitHistory">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitHistory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.GetByIdUnit(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_UnitHistory_Unit key.
            	FK_UnitHistory_Unit Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUnit"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitHistory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_UnitHistory_Vehicle key.
            	FK_UnitHistory_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitHistory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.GetByIdUnitHistory(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UnitHistory index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUnitHistory"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.UnitHistory"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.UnitHistory})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.UnitHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.UnitHistory)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.UnitHistory object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.UnitHistory object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.UnitHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.UnitHistory)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.UnitHistory object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.UnitHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitHistoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.UnitToSensorMapping"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.UnitToSensorMapping"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSensorMapping">. Primary Key.</param>	
            <param name="_idUnit">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitToSensorMapping objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitToSensorMapping objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitToSensorMapping objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitToSensorMapping objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.GetByIdSensorMapping(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_UnitToSensorMapping_SensorMapping key.
            	FK_UnitToSensorMapping_SensorMapping Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSensorMapping"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitToSensorMapping objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.GetByIdUnit(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_UnitToSensorMapping_Unit key.
            	FK_UnitToSensorMapping_Unit Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUnit"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.UnitToSensorMapping objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.GetByIdSensorMappingIdUnit(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UnitToSensorMapping index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSensorMapping"></param>
            <param name="_idUnit"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.UnitToSensorMapping"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.UnitToSensorMapping})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.UnitToSensorMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.UnitToSensorMapping)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.UnitToSensorMapping object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.UnitToSensorMapping object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.UnitToSensorMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.UnitToSensorMapping)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.UnitToSensorMapping object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.UnitToSensorMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitToSensorMappingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedFreeText"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedFreeTextProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersBlackList"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersBlackList"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idBlackList">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersBlackList objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersBlackList objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersBlackList objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumbersBlackList objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.GetByPhoneNumber(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IXPhoneNumbersBlackListPhoneNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_phoneNumber"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.GetByIdBlackList(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Table_1 index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idBlackList"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersBlackList"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PhoneNumbersBlackList})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumbersBlackList object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumbersBlackList)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PhoneNumbersBlackList object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumbersBlackList object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumbersBlackList object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumbersBlackList)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumbersBlackList object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PhoneNumbersBlackList object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.getByPhoneNumber(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_PhoneNumbersBlackList_getByPhoneNumber' stored procedure. 
            </summary>	
            <param name="phoneNumber"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumbersBlackListProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedShortMessage"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedShortMessageProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RegisteredPassengers"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RegisteredPassengers"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idRegisteredPassengers">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RegisteredPassengers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RegisteredPassengers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RegisteredPassengers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RegisteredPassengers objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.GetByIdClient(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_RegisteredPassengers_Clients key.
            	FK_RegisteredPassengers_Clients Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idClient"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RegisteredPassengers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_RegisteredPassengers_Company key.
            	FK_RegisteredPassengers_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RegisteredPassengers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.GetByIdRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_RegisteredPassengers_RfIdCards key.
            	FK_RegisteredPassengers_RfIdCards Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRfIdCard"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RegisteredPassengers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.GetByIdRegisteredPassengers(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_RegisteredPassengers index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegisteredPassengers"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.RegisteredPassengers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.RegisteredPassengers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RegisteredPassengers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RegisteredPassengers)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.RegisteredPassengers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RegisteredPassengers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RegisteredPassengers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RegisteredPassengers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RegisteredPassengers object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.RegisteredPassengers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRegisteredPassengersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.LastLocation"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlLastLocationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileReservations"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileReservations"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileReservations">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservations objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.GetByIdMobileReservationStatus(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MobileReservations_MobileReservationsStatus key.
            	FK_MobileReservations_MobileReservationsStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileReservationStatus"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MobileReservations_Users key.
            	FK_MobileReservations_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileReservations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.GetByIdMobileReservations(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileReservations index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileReservations"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileReservations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileReservations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileReservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileReservations)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileReservations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileReservations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileReservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileReservations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileReservations object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileReservations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.GetActiveByIMEI(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_MobileReservations_GetActiveByIMEI' stored procedure. 
            </summary>	
            <param name="pImei"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.GetAllActiveMobileReservations(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'usr_MobileReservations_GetAllActiveMobileReservations' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.SetMobileReservationCompleted(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            This method wraps the 'usr_MobileReservations_SetMobileReservationCompleted' stored procedure. 
            </summary>	
            <param name="pIdMobileReservation"> A <c>System.Int64?</c> instance.</param>
            <param name="pIdUser"> A <c>System.Int64?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileReservationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Orders"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Orders"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idOrder">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetByIdDriver(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_Driver key.
            	FK_Orders_Driver Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idDriver"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetByIdOrdersSource(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_OrdersSource key.
            	FK_Orders_OrdersSource Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrdersSource"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_PhoneCalls key.
            	FK_Orders_PhoneCalls Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_Users key.
            	FK_Orders_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_Vehicle key.
            	FK_Orders_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.GetByIdOrder(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Orders index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrder"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Orders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Orders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Orders)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Orders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Orders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Orders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Orders object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CompaniesPerUser"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CompaniesPerUser"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idUser">. Primary Key.</param>	
            <param name="_idCompany">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompaniesPerUser objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompaniesPerUser objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompaniesPerUser objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompaniesPerUser objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CompaniesPerOperator_Company key.
            	FK_CompaniesPerOperator_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompaniesPerUser objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CompaniesPerUser_Users key.
            	FK_CompaniesPerUser_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CompaniesPerUser objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.GetByIdUserIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CompaniesPerOperator index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="_idCompany"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.CompaniesPerUser"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.CompaniesPerUser})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CompaniesPerUser object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CompaniesPerUser)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.CompaniesPerUser object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CompaniesPerUser object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CompaniesPerUser object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CompaniesPerUser)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CompaniesPerUser object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.CompaniesPerUser object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompaniesPerUserProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.BlackList"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlBlackListProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisAddressModel"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idAddressModel">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisAddressModel objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisAddressModel objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisAddressModel objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisAddressModel objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_gisAddressModel_gisRegions key.
            	FK_gisAddressModel_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisAddressModel objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.GetByIdStreet(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the gisStreets_gisAddressModel_FK1 key.
            	gisStreets_gisAddressModel_FK1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idStreet"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.GisAddressModel objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.GetByIdAddressModel(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_gisAddressModel index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idAddressModel"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.GisAddressModel"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.GisAddressModel})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisAddressModel object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisAddressModel)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.GisAddressModel object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisAddressModel object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.GisAddressModel object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.GisAddressModel)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.GisAddressModel object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.GisAddressModel object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.GetIDStreetHouseNumber(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'usr_gisAddressModel_GetIDStreetHouseNumber' stored procedure. 
            </summary>	
            <param name="idStreet"> A <c>System.String</c> instance.</param>
            <param name="houseNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPendingPhoneCallsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider">
            <summary>
            This class is the Sql implementation of the NetTiersProvider.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider"/> class.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CreateTransaction">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(GlobSaldo.AVL.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(GlobSaldo.AVL.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(GlobSaldo.AVL.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(GlobSaldo.AVL.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(GlobSaldo.AVL.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(GlobSaldo.AVL.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(GlobSaldo.AVL.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(GlobSaldo.AVL.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.UseStoredProcedure">
            <summary>
            Gets a value indicating whether to use stored procedure or not.
            </summary>
            <value>
            	<c>true</c> if this repository use stored procedures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.IsTransactionSupported">
            <summary>
             Indicates if the current <see cref="T:GlobSaldo.AVL.Data.Bases.NetTiersProvider"/> implementation supports Transacton.
            </summary>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CompanyTimeZoneProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.CompanyTimeZone"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompanyTimeZoneProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompanyTimeZoneProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CompanyProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Company"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompanyProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompanyProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ActionProfileItemsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ActionProfileItems"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlActionProfileItemsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlActionProfileItemsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.RfIdCardsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCards"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRfIdCardsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRfIdCardsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.DriverProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Driver"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlDriverProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlDriverProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.UnitProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Unit"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUnitProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUnitProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.RepeatedOrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.RepeatedOrders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRepeatedOrdersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRepeatedOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ReservationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Reservations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReservationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReservationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.RfIdCardHistoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRfIdCardHistoryProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRfIdCardHistoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.RfIdCardPerClientsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardPerClients"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRfIdCardPerClientsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRfIdCardPerClientsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PhoneCallsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PhoneCalls"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneCallsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneCallsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SentMessagesToVehiclesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SentMessagesToVehicles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSentMessagesToVehiclesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSentMessagesToVehiclesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SensorMappingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SensorMapping"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSensorMappingProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSensorMappingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.RoleProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Role"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRoleProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRoleProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.VehicleProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Vehicle"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehicleProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehicleProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.RegisteredPassengersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.RegisteredPassengers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRegisteredPassengersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlRegisteredPassengersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ReceivedShortMessageProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedShortMessage"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedShortMessageProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedShortMessageProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PhoneNumbersBlackListProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersBlackList"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumbersBlackListProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumbersBlackListProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ReceivedRegionsToProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedRegionsTo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedRegionsToProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedRegionsToProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PhoneNumbersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumbersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumbersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PhoneNumbersPerClientsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumbersPerClients"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumbersPerClientsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumbersPerClientsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PhoneNumberDescriptionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumberDescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumberDescriptionProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPhoneNumberDescriptionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ReceivedMessagesFromVehiclesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedMessagesFromVehicles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedMessagesFromVehiclesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedMessagesFromVehiclesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ReasonForCancelProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ReasonForCancel"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReasonForCancelProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReasonForCancelProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ReceivedFreeTextProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedFreeText"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedFreeTextProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReceivedFreeTextProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SentPopUpMessageProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SentPopUpMessage"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSentPopUpMessageProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSentPopUpMessageProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ReasonsForUserCancelationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ReasonsForUserCancelation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReasonsForUserCancelationProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlReasonsForUserCancelationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.UnitToSensorMappingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.UnitToSensorMapping"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUnitToSensorMappingProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUnitToSensorMappingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SentRegionsToProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SentRegionsTo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSentRegionsToProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSentRegionsToProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.UnitHistoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.UnitHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUnitHistoryProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUnitHistoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.UsersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Users"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUsersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUsersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SystemLogProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SystemLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSystemLogProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSystemLogProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.VehicleConnectionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.VehicleConnections"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehicleConnectionsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehicleConnectionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.VehiclesSelectedByPhoneCallProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesSelectedByPhoneCall"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehiclesSelectedByPhoneCallProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehiclesSelectedByPhoneCallProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.VehiclesOrderConfirmationsByPhoneCallProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehiclesOrderConfirmationsByPhoneCallProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehiclesOrderConfirmationsByPhoneCallProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.VehiclesNullSelectedByPhoneCallProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesNullSelectedByPhoneCall"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehiclesNullSelectedByPhoneCallProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehiclesNullSelectedByPhoneCallProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.UserInOutProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.UserInOut"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUserInOutProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlUserInOutProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SubcontractorPrepaidFeesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPrepaidFees"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorPrepaidFeesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorPrepaidFeesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ShortMessagesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ShortMessages"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlShortMessagesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlShortMessagesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SubcontractorPendingPhoneCallsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPendingPhoneCalls"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorPendingPhoneCallsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorPendingPhoneCallsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ShiftInOutProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ShiftInOut"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlShiftInOutProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlShiftInOutProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SmSreceivedProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SmSreceived"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSmSreceivedProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSmSreceivedProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ServiceEvaluationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ServiceEvaluation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlServiceEvaluationProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlServiceEvaluationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SmSsentProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SmSsent"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSmSsentProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSmSsentProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SubcontractorMonthlyFeesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorMonthlyFees"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorMonthlyFeesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorMonthlyFeesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.StateInOutProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.StateInOut"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlStateInOutProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlStateInOutProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SubcontractorGsmNumbersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorGsmNumbers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorGsmNumbersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlSubcontractorGsmNumbersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PendingPhoneCallsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PendingPhoneCalls"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPendingPhoneCallsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPendingPhoneCallsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.StreetsDistinctProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.StreetsDistinct"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlStreetsDistinctProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlStreetsDistinctProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisGeoLocationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisGeoLocation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisGeoLocationProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisGeoLocationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PenaltyReasonsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PenaltyReasons"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPenaltyReasonsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPenaltyReasonsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisAddressModelProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisAddressModel"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisAddressModelProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisAddressModelProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisObjectsCategoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsCategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisObjectsCategoryProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisObjectsCategoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.FiskalReceiptProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.FiskalReceipt"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlFiskalReceiptProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlFiskalReceiptProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisRegionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisRegions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisRegionsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisRegionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisSearchRegionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisSearchRegions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisSearchRegionsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisSearchRegionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisObjectsSubCategoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisObjectsSubCategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisObjectsSubCategoryProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisObjectsSubCategoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisObjectsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisObjects"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisObjectsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisObjectsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.EventActionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.EventActions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlEventActionsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlEventActionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisPhoneNumbersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisPhoneNumbers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisPhoneNumbersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisPhoneNumbersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.DigitalInputsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.DigitalInputs"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlDigitalInputsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlDigitalInputsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.GisStreetsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.GisStreets"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisStreetsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlGisStreetsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.BlackListProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.BlackList"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlBlackListProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlBlackListProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.AddressModelDescriptionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.AddressModelDescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlAddressModelDescriptionProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlAddressModelDescriptionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ActionsProfilesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ActionsProfiles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlActionsProfilesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlActionsProfilesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CompletedReservationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.CompletedReservations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompletedReservationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompletedReservationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CanceledOrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.CanceledOrders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCanceledOrdersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCanceledOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CommParametersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.CommParameters"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCommParametersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCommParametersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CanceledPhoneCallsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.CanceledPhoneCalls"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCanceledPhoneCallsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCanceledPhoneCallsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ClientsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Clients"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlClientsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlClientsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.CompaniesPerUserProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.CompaniesPerUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompaniesPerUserProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlCompaniesPerUserProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ClientPhoneNumbersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ClientPhoneNumbers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlClientPhoneNumbersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlClientPhoneNumbersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.ObjectDescriptionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.ObjectDescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlObjectDescriptionProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlObjectDescriptionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.InOutDriverProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.InOutDriver"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlInOutDriverProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlInOutDriverProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.OrdersSourceProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.OrdersSource"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersSourceProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersSourceProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileUserHistoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileUserHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileUserHistoryProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileUserHistoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.OrdersWithNoCarsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.OrdersWithNoCars"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersWithNoCarsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersWithNoCarsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PaymentOptionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PaymentOptions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPaymentOptionsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPaymentOptionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PenaltyPerDriverPerPeriodProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPenaltyPerDriverPerPeriodProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPenaltyPerDriverPerPeriodProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.PenaltiesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Penalties"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPenaltiesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlPenaltiesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.OrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Orders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.OrdersCanceledByDriversProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.OrdersCanceledByDrivers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersCanceledByDriversProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlOrdersCanceledByDriversProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileUserProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileUserProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileUserProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileReservationsStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileReservationsStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileReservationsStatusProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileReservationsStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.LocationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.Locations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlLocationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlLocationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileReservationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileReservations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileReservationsProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileReservationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.LocationAdditionalDataProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.LocationAdditionalData"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlLocationAdditionalDataProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlLocationAdditionalDataProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MessageStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MessageStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMessageStatusProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMessageStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.LastLocationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.LastLocation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlLastLocationProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlLastLocationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileInfosProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileInfos"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileInfosProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileInfosProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.IpParametersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.IpParameters"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlIpParametersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlIpParametersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileOrderStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileOrderStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileOrderStatusProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileOrderStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileOrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileOrders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileOrdersProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.MobileMonitoringSentMessagesToVehiclesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.MobileMonitoringSentMessagesToVehicles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileMonitoringSentMessagesToVehiclesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlMobileMonitoringSentMessagesToVehiclesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.VehicleStatesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:GlobSaldo.AVL.Entities.VehicleStates"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehicleStatesProvider">
            <summary>
            Gets the current <see cref="P:GlobSaldo.AVL.Data.SqlClient.SqlNetTiersProvider.SqlVehicleStatesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.DigitalInputs"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.DigitalInputs"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idDigitalInputs">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.DigitalInputs objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.DigitalInputs objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.DigitalInputs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.DigitalInputs objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_DigitalInputs_Vehicle key.
            	FK_DigitalInputs_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.DigitalInputs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.GetByIdDigitalInputs(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DigitalInputs index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idDigitalInputs"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.DigitalInputs"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.DigitalInputs})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.DigitalInputs object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.DigitalInputs)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.DigitalInputs object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.DigitalInputs object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.DigitalInputs object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.DigitalInputs)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.DigitalInputs object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.DigitalInputs object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlDigitalInputsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SmSsent"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSsentProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPrepaidFees"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSubcontractorPrepaidFees">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPrepaidFees objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPrepaidFees objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPrepaidFees objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPrepaidFees objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.GetByIdSubcontractorMonthlyFees(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorPrepaidFees_SubcontractorMonthlyFees key.
            	FK_SubcontractorPrepaidFees_SubcontractorMonthlyFees Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSubcontractorMonthlyFees"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPrepaidFees objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.GetByIdVehicle(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SubcontractorPrepaidFees_Vehicle key.
            	FK_SubcontractorPrepaidFees_Vehicle Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehicle"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SubcontractorPrepaidFees objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.GetByIdSubcontractorPrepaidFees(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SubcontractorPrepaidFees index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSubcontractorPrepaidFees"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPrepaidFees"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SubcontractorPrepaidFees})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorPrepaidFees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorPrepaidFees)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SubcontractorPrepaidFees object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorPrepaidFees object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SubcontractorPrepaidFees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SubcontractorPrepaidFees)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SubcontractorPrepaidFees object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SubcontractorPrepaidFees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CanceledPhoneCalls"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPhoneCall">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.GetByIdRegion(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CanceledPhoneCalls_gisRegions key.
            	FK_CanceledPhoneCalls_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegion"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.GetByIdStreet(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CanceledPhoneCalls_gisStreets key.
            	FK_CanceledPhoneCalls_gisStreets Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idStreet"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.GetByIdReasonForCancel(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CanceledPhoneCalls_ReasonForCancel key.
            	FK_CanceledPhoneCalls_ReasonForCancel Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReasonForCancel"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CanceledPhoneCalls_Users key.
            	FK_CanceledPhoneCalls_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CanceledPhoneCalls index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.CanceledPhoneCalls"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.CanceledPhoneCalls})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CanceledPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CanceledPhoneCalls)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.CanceledPhoneCalls object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CanceledPhoneCalls object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CanceledPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CanceledPhoneCalls)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CanceledPhoneCalls object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.CanceledPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisStreets"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisStreetsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReasonsForUserCancelation"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonsForUserCancelationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SentPopUpMessage"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSentPopUpMessageProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardHistory"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardHistory"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idRfIdCardHistory">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardHistory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardHistory objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.GetByIdRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_RfIdCardHistory_RfIdCards key.
            	FK_RfIdCardHistory_RfIdCards Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRfIdCard"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RfIdCardHistory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.GetByIdRfIdCardHistory(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_RfIdCardHistory index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRfIdCardHistory"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardHistory"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.RfIdCardHistory})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RfIdCardHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RfIdCardHistory)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.RfIdCardHistory object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RfIdCardHistory object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RfIdCardHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RfIdCardHistory)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RfIdCardHistory object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.RfIdCardHistory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardHistoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RepeatedOrders"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RepeatedOrders"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idRepeatedOrders">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RepeatedOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RepeatedOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RepeatedOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RepeatedOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.GetByIdOrders(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_RepeatedOrders_Orders key.
            	FK_RepeatedOrders_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrders"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.RepeatedOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.GetByIdRepeatedOrders(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_RepeatedOrders index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRepeatedOrders"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.RepeatedOrders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.RepeatedOrders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RepeatedOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RepeatedOrders)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.RepeatedOrders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RepeatedOrders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.RepeatedOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.RepeatedOrders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.RepeatedOrders object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.RepeatedOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRepeatedOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileInfos"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idMobileInfo">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileInfos objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileInfos objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileInfos objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.MobileInfos objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.GetByIdMobileInfo(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MobileInfos index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idMobileInfo"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.MobileInfos"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.MobileInfos})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileInfos object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileInfos)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.MobileInfos object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileInfos object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.MobileInfos object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.MobileInfos)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.MobileInfos object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.MobileInfos object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileInfos"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileInfosProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ObjectDescription"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlObjectDescriptionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CanceledPhoneCalls"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledPhoneCallsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisAddressModel"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisAddressModelProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PendingPhoneCalls"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PendingPhoneCalls"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPendingPhoneCall">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetByIdObjectFrom(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PendingPhoneCalls_gisObjects key.
            	FK_PendingPhoneCalls_gisObjects Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idObjectFrom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetByIdRegionFrom(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PendingPhoneCalls_gisRegions key.
            	FK_PendingPhoneCalls_gisRegions Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idRegionFrom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetByIdPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PendingPhoneCalls_PhoneCalls key.
            	FK_PendingPhoneCalls_PhoneCalls Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneCall"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PendingPhoneCalls_Users key.
            	FK_PendingPhoneCalls_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PendingPhoneCalls objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetByIdPendingPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PendingPhoneCall index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPendingPhoneCall"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PendingPhoneCalls"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PendingPhoneCalls})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PendingPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PendingPhoneCalls)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PendingPhoneCalls object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PendingPhoneCalls object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PendingPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PendingPhoneCalls)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PendingPhoneCalls object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PendingPhoneCalls object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetMissed(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'usr_PendingPhoneCalls_GetMissed' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.GetPending(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'usr_PendingPhoneCalls_GetPending' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPendingPhoneCallsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idVehiclesOrderConfirmationsByPhoneCall">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.GetByIdVehiclesOrderConfirmationsByPhoneCall(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VehiclesOrderConfirmationsByPhoneCall index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idVehiclesOrderConfirmationsByPhoneCall"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.VehiclesOrderConfirmationsByPhoneCall object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlVehiclesOrderConfirmationsByPhoneCallProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReasonForCancel"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReasonForCancel"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idReasonForCancel">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonForCancel objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonForCancel objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonForCancel objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.ReasonForCancel objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.GetByName(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ReasonForCancel index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ReasonForCancel"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.GetByIdReasonForCancel(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReasonForCancel index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idReasonForCancel"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.ReasonForCancel"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.ReasonForCancel})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReasonForCancel object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReasonForCancel)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.ReasonForCancel object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReasonForCancel object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.ReasonForCancel object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.ReasonForCancel)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.ReasonForCancel object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.ReasonForCancel object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReasonForCancelProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.ReceivedRegionsTo"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlReceivedRegionsToProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.IpParameters"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlIpParametersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileUser"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.MobileUserHistory"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlMobileUserHistoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorMonthlyFees"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorMonthlyFeesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlDriverProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Driver"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlDriverProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlDriverProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CompanyTimeZone"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCompanyTimeZoneProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SmSreceived"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idSmSreceived">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSreceived objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSreceived objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSreceived objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.SmSreceived objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.GetByIdSmSreceived(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SMSreceived index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idSmSreceived"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.SmSreceived"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.SmSreceived})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SmSreceived object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SmSreceived)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.SmSreceived object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SmSreceived object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.SmSreceived object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.SmSreceived)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.SmSreceived object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.SmSreceived object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumberDescription"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumberDescription"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idPhoneNumberDescription">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumberDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumberDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumberDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumberDescription objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.GetByIdUser(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PhoneNumberDescription_Users key.
            	FK_PhoneNumberDescription_Users Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idUser"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.PhoneNumberDescription objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.GetByIdPhoneNumberDescription(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IPhoneNumberDescription_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idPhoneNumberDescription"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.PhoneNumberDescription"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.PhoneNumberDescription})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumberDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumberDescription)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.PhoneNumberDescription object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumberDescription object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.PhoneNumberDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.PhoneNumberDescription)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.PhoneNumberDescription object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.PhoneNumberDescription object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.GetByPhoneNumber(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_PhoneNumberDescription_GetByPhoneNumber' stored procedure. 
            </summary>	
            <param name="phoneNumber"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPhoneNumberDescriptionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.RfIdCardPerClients"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlRfIdCardPerClientsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Unit"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlUnitProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlUnitProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.OrdersWithNoCars"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idOrdersWithNoCars">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersWithNoCars objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersWithNoCars objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersWithNoCars objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.OrdersWithNoCars objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.GetByIdOrdersWithNoCars(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_OrdersWithNoCars index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrdersWithNoCars"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.OrdersWithNoCars"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.OrdersWithNoCars})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.OrdersWithNoCars object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.OrdersWithNoCars)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.OrdersWithNoCars object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.OrdersWithNoCars object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.OrdersWithNoCars object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.OrdersWithNoCars)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.OrdersWithNoCars object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.OrdersWithNoCars object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CanceledOrders"/> entity.
            </summary>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.CanceledOrders"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idCanceledOrders">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledOrders objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.GetByIdOrders(GlobSaldo.AVL.Data.TransactionManager,System.Nullable{System.Int64},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CanceledOrders_Orders key.
            	FK_CanceledOrders_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idOrders"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.CanceledOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.GetByIdCanceledOrders(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CanceledOrders index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCanceledOrders"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.CanceledOrders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.CanceledOrders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CanceledOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CanceledOrders)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.CanceledOrders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CanceledOrders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.CanceledOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.CanceledOrders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.CanceledOrders object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.CanceledOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlCanceledOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.AddressModelDescription"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlAddressModelDescriptionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisObjects"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisObjectsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.PenaltyPerDriverPerPeriod"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlPenaltyPerDriverPerPeriodProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.OrdersWithNoCars"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlOrdersWithNoCarsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Clients"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.Delete(GlobSaldo.AVL.Data.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_idClient">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Clients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.Find(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GlobSaldo.AVL.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Clients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.GetAll(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Clients objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.GetPaged(GlobSaldo.AVL.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Clients objects.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.GetByIdCompany(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Clients_Company key.
            	FK_Clients_Company Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idCompany"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GlobSaldo.AVL.Entities.Clients objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.GetByIdClient(GlobSaldo.AVL.Data.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Clients index.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="_idClient"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:GlobSaldo.AVL.Entities.Clients"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.BulkInsert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.TList{GlobSaldo.AVL.Entities.Clients})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Clients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.Insert(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Clients)">
            <summary>
            	Inserts a GlobSaldo.AVL.Entities.Clients object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Clients object to insert.</param>
            <remarks>
            	After inserting into the datasource, the GlobSaldo.AVL.Entities.Clients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.Update(GlobSaldo.AVL.Data.TransactionManager,GlobSaldo.AVL.Entities.Clients)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object</param>
            <param name="entity">GlobSaldo.AVL.Entities.Clients object to update.</param>
            <remarks>
            	After updating the datasource, the GlobSaldo.AVL.Entities.Clients object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.GetBySerialNumberRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_Clients_GetBySerialNumberRfIdCard' stored procedure. 
            </summary>	
            <param name="serialNumberRfIdCard"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.GetBySerialSerialNumberRfIdCard(GlobSaldo.AVL.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'usr_Clients_GetBySerialSerialNumberRfIdCard' stored procedure. 
            </summary>	
            <param name="serialSerialNumberRfIdCard"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:GlobSaldo.AVL.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:GlobSaldo.AVL.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GlobSaldo.AVL.Data.SqlClient.SqlClientsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlClientsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.Clients"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlClientsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlClientsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.GisSearchRegions"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlGisSearchRegionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SmSreceived"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSmSreceivedProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:GlobSaldo.AVL.Entities.SubcontractorPrepaidFees"/> entity.
            </summary>
        </member>
        <member name="M:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:GlobSaldo.AVL.Data.SqlClient.SqlSubcontractorPrepaidFeesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
    </members>
</doc>
